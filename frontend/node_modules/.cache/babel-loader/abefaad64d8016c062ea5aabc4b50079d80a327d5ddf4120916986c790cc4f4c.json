{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\CreateSoftware.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n\n// // export default function CreateSoftware() {\n// //   const [form, setForm] = useState({ name: '', description: '', accessLevels: '' });\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n// //     await axios.post('http://localhost:5000/api/software', {\n// //       ...form,\n// //       accessLevels: form.accessLevels.split(',')\n// //     }, {\n// //       headers: { Authorization: `Bearer ${token}` }\n// //     });\n// //     alert('Software created!');\n// //   };\n\n// //   return (\n// //     <form onSubmit={handleSubmit}>\n// //       <input placeholder=\"Name\" onChange={e => setForm({ ...form, name: e.target.value })} />\n// //       <textarea placeholder=\"Description\" onChange={e => setForm({ ...form, description: e.target.value })} />\n// //       <input placeholder=\"Access Levels (comma separated)\" onChange={e => setForm({ ...form, accessLevels: e.target.value })} />\n// //       <button type=\"submit\">Create</button>\n// //     </form>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateSoftware = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     version: '',\n//     licenseKey: '',\n//   });\n\n//   const [message, setMessage] = useState('');\n\n//   const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     try {\n//       // Replace with your backend API endpoint\n//       const res = await axios.post('/api/software/create', formData);\n//       setMessage('Software created successfully!');\n//       setFormData({ name: '', description: '', version: '', licenseKey: '' });\n//     } catch (err) {\n//       setMessage('Error creating software.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\n//       <h3>Create Software</h3>\n//       {message && <div className=\"alert alert-info\">{message}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">\n//             Software Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"name\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"Enter software name\"\n//           />\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"description\" className=\"form-label\">\n//             Description\n//           </label>\n//           <textarea\n//             className=\"form-control\"\n//             id=\"description\"\n//             name=\"description\"\n//             rows=\"3\"\n//             value={formData.description}\n//             onChange={handleChange}\n//             placeholder=\"Enter description\"\n//             required\n//           />\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"version\" className=\"form-label\">\n//             Version\n//           </label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"version\"\n//             name=\"version\"\n//             value={formData.version}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"e.g., 1.0.0\"\n//           />\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"licenseKey\" className=\"form-label\">\n//             License Key\n//           </label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"licenseKey\"\n//             name=\"licenseKey\"\n//             value={formData.licenseKey}\n//             onChange={handleChange}\n//             placeholder=\"Optional\"\n//           />\n//         </div>\n\n//         <button type=\"submit\" className=\"btn btn-success\">\n//           Create\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateSoftware;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSoftware = () => {\n  _s();\n  const [softwareName, setSoftwareName] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // TODO: Connect with backend API to save software data\n    setMessage(`Software \"${softwareName}\" created successfully!`);\n    setSoftwareName('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Software\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"softwareName\",\n          className: \"form-label\",\n          children: \"Software Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"softwareName\",\n          className: \"form-control\",\n          value: softwareName,\n          onChange: e => setSoftwareName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          className: \"form-control\",\n          rows: \"3\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mt-3\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSoftware, \"jzsv90vy0I2w1YtvoCOKAYe6nR4=\");\n_c = CreateSoftware;\nexport default CreateSoftware;\nvar _c;\n$RefreshReg$(_c, \"CreateSoftware\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateSoftware","_s","softwareName","setSoftwareName","description","setDescription","message","setMessage","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/CreateSoftware.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // export default function CreateSoftware() {\r\n// //   const [form, setForm] = useState({ name: '', description: '', accessLevels: '' });\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n// //     await axios.post('http://localhost:5000/api/software', {\r\n// //       ...form,\r\n// //       accessLevels: form.accessLevels.split(',')\r\n// //     }, {\r\n// //       headers: { Authorization: `Bearer ${token}` }\r\n// //     });\r\n// //     alert('Software created!');\r\n// //   };\r\n\r\n// //   return (\r\n// //     <form onSubmit={handleSubmit}>\r\n// //       <input placeholder=\"Name\" onChange={e => setForm({ ...form, name: e.target.value })} />\r\n// //       <textarea placeholder=\"Description\" onChange={e => setForm({ ...form, description: e.target.value })} />\r\n// //       <input placeholder=\"Access Levels (comma separated)\" onChange={e => setForm({ ...form, accessLevels: e.target.value })} />\r\n// //       <button type=\"submit\">Create</button>\r\n// //     </form>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CreateSoftware = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     description: '',\r\n//     version: '',\r\n//     licenseKey: '',\r\n//   });\r\n\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async e => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Replace with your backend API endpoint\r\n//       const res = await axios.post('/api/software/create', formData);\r\n//       setMessage('Software created successfully!');\r\n//       setFormData({ name: '', description: '', version: '', licenseKey: '' });\r\n//     } catch (err) {\r\n//       setMessage('Error creating software.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\r\n//       <h3>Create Software</h3>\r\n//       {message && <div className=\"alert alert-info\">{message}</div>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">\r\n//             Software Name\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"name\"\r\n//             name=\"name\"\r\n//             value={formData.name}\r\n//             onChange={handleChange}\r\n//             required\r\n//             placeholder=\"Enter software name\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"description\" className=\"form-label\">\r\n//             Description\r\n//           </label>\r\n//           <textarea\r\n//             className=\"form-control\"\r\n//             id=\"description\"\r\n//             name=\"description\"\r\n//             rows=\"3\"\r\n//             value={formData.description}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter description\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"version\" className=\"form-label\">\r\n//             Version\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"version\"\r\n//             name=\"version\"\r\n//             value={formData.version}\r\n//             onChange={handleChange}\r\n//             required\r\n//             placeholder=\"e.g., 1.0.0\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"licenseKey\" className=\"form-label\">\r\n//             License Key\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"licenseKey\"\r\n//             name=\"licenseKey\"\r\n//             value={formData.licenseKey}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Optional\"\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"btn btn-success\">\r\n//           Create\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateSoftware;\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateSoftware = () => {\r\n  const [softwareName, setSoftwareName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // TODO: Connect with backend API to save software data\r\n    setMessage(`Software \"${softwareName}\" created successfully!`);\r\n    setSoftwareName('');\r\n    setDescription('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Software</h2>\r\n      <form onSubmit={handleSubmit} className=\"w-50\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"softwareName\" className=\"form-label\">\r\n            Software Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"softwareName\"\r\n            className=\"form-control\"\r\n            value={softwareName}\r\n            onChange={e => setSoftwareName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"description\" className=\"form-label\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Create\r\n        </button>\r\n      </form>\r\n\r\n      {message && <div className=\"alert alert-success mt-3\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSoftware;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAH,UAAU,CAAC,aAAaL,YAAY,yBAAyB,CAAC;IAC9DC,eAAe,CAAC,EAAE,CAAC;IACnBE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhB,OAAA;MAAMiB,QAAQ,EAAER,YAAa;MAACS,SAAS,EAAC,MAAM;MAAAN,QAAA,gBAC5CZ,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAN,QAAA,gBACnBZ,OAAA;UAAOmB,OAAO,EAAC,cAAc;UAACD,SAAS,EAAC,YAAY;UAAAN,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRhB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,cAAc;UACjBH,SAAS,EAAC,cAAc;UACxBI,KAAK,EAAEnB,YAAa;UACpBoB,QAAQ,EAAEb,CAAC,IAAIN,eAAe,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;UAC/CG,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhB,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAN,QAAA,gBACnBZ,OAAA;UAAOmB,OAAO,EAAC,aAAa;UAACD,SAAS,EAAC,YAAY;UAAAN,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRhB,OAAA;UACEqB,EAAE,EAAC,aAAa;UAChBH,SAAS,EAAC,cAAc;UACxBQ,IAAI,EAAC,GAAG;UACRJ,KAAK,EAAEjB,WAAY;UACnBkB,QAAQ,EAAEb,CAAC,IAAIJ,cAAc,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;UAC9CG,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,iBAAiB;QAAAN,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENT,OAAO,iBAAIP,OAAA;MAAKkB,SAAS,EAAC,0BAA0B;MAAAN,QAAA,EAAEL;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACd,EAAA,CArDID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAuDpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}