{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// export default function PendingRequests() {\n//   const [requests, setRequests] = useState([]);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     axios.get('http://localhost:5000/api/requests/pending', {\n//       headers: { Authorization: `Bearer ${token}` }\n//     }).then(res => setRequests(res.data));\n//   }, []);\n\n//   const handleAction = async (id, status) => {\n//     const token = localStorage.getItem('token');\n//     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\n//       headers: { Authorization: `Bearer ${token}` }\n//     });\n//     alert(`Request ${status}`);\n//     setRequests(requests.filter(r => r.id !== id));\n//   };\n\n//   return (\n//     <div>\n//       {requests.map(r => (\n//         <div key={r.id}>\n//           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\n//           <p>Reason: {r.reason}</p>\n//           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\n//           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/PendingRequests.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// export default function PendingRequests() {\r\n//   const [requests, setRequests] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     axios.get('http://localhost:5000/api/requests/pending', {\r\n//       headers: { Authorization: `Bearer ${token}` }\r\n//     }).then(res => setRequests(res.data));\r\n//   }, []);\r\n\r\n//   const handleAction = async (id, status) => {\r\n//     const token = localStorage.getItem('token');\r\n//     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\r\n//       headers: { Authorization: `Bearer ${token}` }\r\n//     });\r\n//     alert(`Request ${status}`);\r\n//     setRequests(requests.filter(r => r.id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {requests.map(r => (\r\n//         <div key={r.id}>\r\n//           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\r\n//           <p>Reason: {r.reason}</p>\r\n//           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\r\n//           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}