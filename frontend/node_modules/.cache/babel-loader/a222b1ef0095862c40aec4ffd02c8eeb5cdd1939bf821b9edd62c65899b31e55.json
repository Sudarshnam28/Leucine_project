{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\RequestAccess.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n\n// // export default function RequestAccess() {\n// //   const [softwares, setSoftwares] = useState([]);\n// //   const [form, setForm] = useState({ softwareId: '', accessType: '', reason: '' });\n\n// //   useEffect(() => {\n// //     axios.get('http://localhost:5000/api/software').then(res => setSoftwares(res.data));\n// //   }, []);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n// //     await axios.post('http://localhost:5000/api/requests', form, {\n// //       headers: { Authorization: `Bearer ${token}` }\n// //     });\n// //     alert('Request submitted!');\n// //   };\n\n// //   return (\n// //     <form onSubmit={handleSubmit}>\n// //       <select onChange={e => setForm({ ...form, softwareId: e.target.value })}>\n// //         <option>Select software</option>\n// //         {softwares.map(soft => <option key={soft.id} value={soft.id}>{soft.name}</option>)}\n// //       </select>\n// //       <input placeholder=\"Access Type (Read/Write/Admin)\" onChange={e => setForm({ ...form, accessType: e.target.value })} />\n// //       <textarea placeholder=\"Reason\" onChange={e => setForm({ ...form, reason: e.target.value })} />\n// //       <button type=\"submit\">Request Access</button>\n// //     </form>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const RequestAccess = () => {\n//   const [softwareId, setSoftwareId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('/api/requests/create', { softwareId });\n//       setMessage('Access request sent successfully.');\n//       setSoftwareId('');\n//     } catch (err) {\n//       setMessage('Failed to send access request.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\n//       <h3>Request Access to Software</h3>\n//       {message && <div className=\"alert alert-info\">{message}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"softwareId\" className=\"form-label\">\n//             Software ID\n//           </label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"softwareId\"\n//             name=\"softwareId\"\n//             value={softwareId}\n//             onChange={e => setSoftwareId(e.target.value)}\n//             placeholder=\"Enter software ID\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           Request Access\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RequestAccess;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestAccess = () => {\n  _s();\n  const [softwareId, setSoftwareId] = useState('');\n  const [reason, setReason] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // TODO: Call backend API to request access for softwareId\n    setMessage(`Access requested for software ID: ${softwareId}`);\n    setSoftwareId('');\n    setReason('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"softwareId\",\n          className: \"form-label\",\n          children: \"Software ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"softwareId\",\n          className: \"form-control\",\n          value: softwareId,\n          onChange: e => setSoftwareId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reason\",\n          className: \"form-label\",\n          children: \"Reason for Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"reason\",\n          className: \"form-control\",\n          rows: \"3\",\n          value: reason,\n          onChange: e => setReason(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info mt-3\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestAccess, \"Wbk4eNTI9DWnO6Az8XOk930veKQ=\");\n_c = RequestAccess;\nexport default RequestAccess;\nvar _c;\n$RefreshReg$(_c, \"RequestAccess\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RequestAccess","_s","softwareId","setSoftwareId","reason","setReason","message","setMessage","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/RequestAccess.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // export default function RequestAccess() {\r\n// //   const [softwares, setSoftwares] = useState([]);\r\n// //   const [form, setForm] = useState({ softwareId: '', accessType: '', reason: '' });\r\n\r\n// //   useEffect(() => {\r\n// //     axios.get('http://localhost:5000/api/software').then(res => setSoftwares(res.data));\r\n// //   }, []);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n// //     await axios.post('http://localhost:5000/api/requests', form, {\r\n// //       headers: { Authorization: `Bearer ${token}` }\r\n// //     });\r\n// //     alert('Request submitted!');\r\n// //   };\r\n\r\n// //   return (\r\n// //     <form onSubmit={handleSubmit}>\r\n// //       <select onChange={e => setForm({ ...form, softwareId: e.target.value })}>\r\n// //         <option>Select software</option>\r\n// //         {softwares.map(soft => <option key={soft.id} value={soft.id}>{soft.name}</option>)}\r\n// //       </select>\r\n// //       <input placeholder=\"Access Type (Read/Write/Admin)\" onChange={e => setForm({ ...form, accessType: e.target.value })} />\r\n// //       <textarea placeholder=\"Reason\" onChange={e => setForm({ ...form, reason: e.target.value })} />\r\n// //       <button type=\"submit\">Request Access</button>\r\n// //     </form>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const RequestAccess = () => {\r\n//   const [softwareId, setSoftwareId] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async e => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('/api/requests/create', { softwareId });\r\n//       setMessage('Access request sent successfully.');\r\n//       setSoftwareId('');\r\n//     } catch (err) {\r\n//       setMessage('Failed to send access request.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\r\n//       <h3>Request Access to Software</h3>\r\n//       {message && <div className=\"alert alert-info\">{message}</div>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"softwareId\" className=\"form-label\">\r\n//             Software ID\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"softwareId\"\r\n//             name=\"softwareId\"\r\n//             value={softwareId}\r\n//             onChange={e => setSoftwareId(e.target.value)}\r\n//             placeholder=\"Enter software ID\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary\">\r\n//           Request Access\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RequestAccess;\r\nimport React, { useState } from 'react';\r\n\r\nconst RequestAccess = () => {\r\n  const [softwareId, setSoftwareId] = useState('');\r\n  const [reason, setReason] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // TODO: Call backend API to request access for softwareId\r\n    setMessage(`Access requested for software ID: ${softwareId}`);\r\n    setSoftwareId('');\r\n    setReason('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Request Access</h2>\r\n      <form onSubmit={handleSubmit} className=\"w-50\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"softwareId\" className=\"form-label\">\r\n            Software ID\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"softwareId\"\r\n            className=\"form-control\"\r\n            value={softwareId}\r\n            onChange={e => setSoftwareId(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"reason\" className=\"form-label\">\r\n            Reason for Access\r\n          </label>\r\n          <textarea\r\n            id=\"reason\"\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={reason}\r\n            onChange={e => setReason(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Request\r\n        </button>\r\n      </form>\r\n\r\n      {message && <div className=\"alert alert-info mt-3\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestAccess;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}