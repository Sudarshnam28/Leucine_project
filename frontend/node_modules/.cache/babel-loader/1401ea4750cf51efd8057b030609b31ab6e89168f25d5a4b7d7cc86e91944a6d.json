{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { Link, useNavigate } from 'react-router-dom';\n// // import './login.css';\n// // import axios from 'axios';\n\n// // export default function Login() {\n// //   const [form, setForm] = useState({ username: '', password: '' });\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/auth/login', form);\n// //       if (res.data.message === \"Please verify your email before login\") {\n// //         return alert(\"Please verify your email first.\");\n// //       }\n\n// //       if (res.data.token) {\n// //         localStorage.setItem('token', res.data.token);\n// //         localStorage.setItem('role', res.data.role);\n// //         alert('Login successful!');\n// //         navigate('/');\n// //       }\n// //       else {\n// //         alert('Invalid credentials');\n// //       }\n// //     } catch (error) {\n// //       alert('Error logging in');\n// //       console.error(error);\n// //     }\n// //   };\n\n// //   const onChange = (e) => {\n// //     setForm({ ...form, [e.target.name]: e.target.value });\n// //   };\n\n// //   return (\n// //     <div className=\"body\">\n// //       <div className=\"login-container\">\n// //         <h1 style={{ color: \"Background\", fontStyle: \"oblique\" }}>Login</h1>\n// //         <form onSubmit={handleSubmit}>\n// //           <input\n// //             type=\"text\"\n// //             id=\"username\"\n// //             name=\"username\"\n// //             value={form.username}\n// //             onChange={onChange}\n// //             placeholder=\"Username\"\n// //             required\n// //             minLength={4}\n// //             maxLength={30}\n// //           />\n// //           <input\n// //             type=\"password\"\n// //             id=\"password\"\n// //             name=\"password\"\n// //             value={form.password}\n// //             onChange={onChange}\n// //             placeholder=\"Password\"\n// //             required\n// //             minLength={8}\n// //             maxLength={20}\n// //           />\n\n// //           <div className=\"extra-links\">\n// //             <div>\n// //               <input type=\"checkbox\" id=\"remember\" />\n// //               <label htmlFor=\"remember\"> <i>Remember me</i></label>\n// //             </div>\n// //           </div>\n\n// //           <button type=\"submit\">Login</button>\n// //           <br />\n// //           <div className=\"signup-link\">\n// //             Don't have an account? <Link to=\"/signup\">Register</Link>\n// //           </div>\n// //         </form>\n\n// //       </div>\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import \"./login.css\";\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const Login = ({ login }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n\n//     // Simulate login success if username and password are \"admin\"\n//     if (username === 'admin' && password === 'admin') {\n//       login();\n//       alert('Login successful!');\n//       navigate('/home');\n//     } else {\n//       setError('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div className=\"body\">\n//       <div className=\"login-container\">\n//         <h1 style={{ color: \"Background\", fontStyle: \"oblique\" }}>Login</h1>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             name=\"username\"\n//             value={username}\n//             onChange={e => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//             required\n//             minLength={4}\n//             maxLength={30}\n//           />\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={e => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//             required\n//             minLength={8}\n//             maxLength={20}\n//           />\n\n//           <div className=\"extra-links\">\n//             <div>\n//               <input type=\"checkbox\" id=\"remember\" />\n//               <label htmlFor=\"remember\"> <i>Remember me</i></label>\n//             </div>\n//           </div>\n\n//           <button type=\"submit\">Login</button>\n//           <br />\n\n//           {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n\n//           <div className=\"signup-link\" style={{ marginTop: '10px' }}>\n//             Don't have an account? <Link to=\"/signup\">Register</Link>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  login\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (username === 'admin' && password === 'admin') {\n        login('Admin');\n        navigate('/home');\n      } else if (username === 'manager' && password === 'manager') {\n        login('Manager');\n        navigate('/home');\n      } else if (username === 'employee' && password === 'employee') {\n        login('Employee');\n        navigate('/home');\n      } else {\n        setError('Invalid username or password');\n      }\n    } catch (err) {\n      setError('An error occurred during login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter your credentials to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            className: \"form-control\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Enter your username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"remember\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked),\n              className: \"form-check-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"remember\",\n              className: \"form-check-label\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            className: \"forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          disabled: isLoading,\n          children: isLoading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ZXdIKz/2r3F0WwVmoMm9w+PtdoA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","login","_s","username","setUsername","password","setPassword","rememberMe","setRememberMe","error","setError","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","checked","to","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/Login.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n// // import './login.css';\r\n// // import axios from 'axios';\r\n\r\n// // export default function Login() {\r\n// //   const [form, setForm] = useState({ username: '', password: '' });\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/auth/login', form);\r\n// //       if (res.data.message === \"Please verify your email before login\") {\r\n// //         return alert(\"Please verify your email first.\");\r\n// //       }\r\n\r\n// //       if (res.data.token) {\r\n// //         localStorage.setItem('token', res.data.token);\r\n// //         localStorage.setItem('role', res.data.role);\r\n// //         alert('Login successful!');\r\n// //         navigate('/');\r\n// //       }\r\n// //       else {\r\n// //         alert('Invalid credentials');\r\n// //       }\r\n// //     } catch (error) {\r\n// //       alert('Error logging in');\r\n// //       console.error(error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const onChange = (e) => {\r\n// //     setForm({ ...form, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"body\">\r\n// //       <div className=\"login-container\">\r\n// //         <h1 style={{ color: \"Background\", fontStyle: \"oblique\" }}>Login</h1>\r\n// //         <form onSubmit={handleSubmit}>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             id=\"username\"\r\n// //             name=\"username\"\r\n// //             value={form.username}\r\n// //             onChange={onChange}\r\n// //             placeholder=\"Username\"\r\n// //             required\r\n// //             minLength={4}\r\n// //             maxLength={30}\r\n// //           />\r\n// //           <input\r\n// //             type=\"password\"\r\n// //             id=\"password\"\r\n// //             name=\"password\"\r\n// //             value={form.password}\r\n// //             onChange={onChange}\r\n// //             placeholder=\"Password\"\r\n// //             required\r\n// //             minLength={8}\r\n// //             maxLength={20}\r\n// //           />\r\n\r\n// //           <div className=\"extra-links\">\r\n// //             <div>\r\n// //               <input type=\"checkbox\" id=\"remember\" />\r\n// //               <label htmlFor=\"remember\"> <i>Remember me</i></label>\r\n// //             </div>\r\n// //           </div>\r\n\r\n// //           <button type=\"submit\">Login</button>\r\n// //           <br />\r\n// //           <div className=\"signup-link\">\r\n// //             Don't have an account? <Link to=\"/signup\">Register</Link>\r\n// //           </div>\r\n// //         </form>\r\n\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import \"./login.css\";\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// const Login = ({ login }) => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     // Simulate login success if username and password are \"admin\"\r\n//     if (username === 'admin' && password === 'admin') {\r\n//       login();\r\n//       alert('Login successful!');\r\n//       navigate('/home');\r\n//     } else {\r\n//       setError('Invalid credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"body\">\r\n//       <div className=\"login-container\">\r\n//         <h1 style={{ color: \"Background\", fontStyle: \"oblique\" }}>Login</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"username\"\r\n//             name=\"username\"\r\n//             value={username}\r\n//             onChange={e => setUsername(e.target.value)}\r\n//             placeholder=\"Username\"\r\n//             required\r\n//             minLength={4}\r\n//             maxLength={30}\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={e => setPassword(e.target.value)}\r\n//             placeholder=\"Password\"\r\n//             required\r\n//             minLength={8}\r\n//             maxLength={20}\r\n//           />\r\n\r\n//           <div className=\"extra-links\">\r\n//             <div>\r\n//               <input type=\"checkbox\" id=\"remember\" />\r\n//               <label htmlFor=\"remember\"> <i>Remember me</i></label>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <button type=\"submit\">Login</button>\r\n//           <br />\r\n\r\n//           {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n\r\n//           <div className=\"signup-link\" style={{ marginTop: '10px' }}>\r\n//             Don't have an account? <Link to=\"/signup\">Register</Link>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst Login = ({ login }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      if (username === 'admin' && password === 'admin') {\r\n        login('Admin');\r\n        navigate('/home');\r\n      } else if (username === 'manager' && password === 'manager') {\r\n        login('Manager');\r\n        navigate('/home');\r\n      } else if (username === 'employee' && password === 'employee') {\r\n        login('Employee');\r\n        navigate('/home');\r\n      } else {\r\n        setError('Invalid username or password');\r\n      }\r\n    } catch (err) {\r\n      setError('An error occurred during login');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-header\">\r\n          <h2>Welcome Back</h2>\r\n          <p>Please enter your credentials to login</p>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"alert alert-danger\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              className=\"form-control\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Enter your username\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-options\">\r\n            <div className=\"form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"remember\"\r\n                checked={rememberMe}\r\n                onChange={(e) => setRememberMe(e.target.checked)}\r\n                className=\"form-check-input\"\r\n              />\r\n              <label htmlFor=\"remember\" className=\"form-check-label\">Remember me</label>\r\n            </div>\r\n            \r\n            <Link to=\"/forgot-password\" className=\"forgot-password\">Forgot password?</Link>\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={isLoading}>\r\n            {isLoading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n        \r\n        <div className=\"login-footer\">\r\n          <p>Don't have an account? <Link to=\"/signup\">Sign up</Link></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAM,IAAIK,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MAEvD,IAAIf,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,OAAO,EAAE;QAChDJ,KAAK,CAAC,OAAO,CAAC;QACdY,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM,IAAIV,QAAQ,KAAK,SAAS,IAAIE,QAAQ,KAAK,SAAS,EAAE;QAC3DJ,KAAK,CAAC,SAAS,CAAC;QAChBY,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM,IAAIV,QAAQ,KAAK,UAAU,IAAIE,QAAQ,KAAK,UAAU,EAAE;QAC7DJ,KAAK,CAAC,UAAU,CAAC;QACjBY,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM;QACLH,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZV,QAAQ,CAAC,gCAAgC,CAAC;IAC5C,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBvB,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BvB,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BvB,OAAA;UAAAuB,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB3B,OAAA;UAAAuB,QAAA,EAAG;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,EAELjB,KAAK,iBACJV,OAAA;QAAKsB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED3B,OAAA;QAAM4B,QAAQ,EAAEb,YAAa;QAAAQ,QAAA,gBAC3BvB,OAAA;UAAKsB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvB,OAAA;YAAO6B,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjE3B,OAAA;YACE8B,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,UAAU;YACbT,SAAS,EAAC,cAAc;YACxBU,KAAK,EAAE5B,QAAS;YAChB6B,QAAQ,EAAGjB,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;YAC7CG,WAAW,EAAC,qBAAqB;YACjCC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN3B,OAAA;UAAKsB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvB,OAAA;YAAO6B,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjE3B,OAAA;YACE8B,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbT,SAAS,EAAC,cAAc;YACxBU,KAAK,EAAE1B,QAAS;YAChB2B,QAAQ,EAAGjB,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;YAC7CG,WAAW,EAAC,qBAAqB;YACjCC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN3B,OAAA;UAAKsB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BvB,OAAA;YAAKsB,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBvB,OAAA;cACE8B,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,UAAU;cACbM,OAAO,EAAE7B,UAAW;cACpByB,QAAQ,EAAGjB,CAAC,IAAKP,aAAa,CAACO,CAAC,CAACkB,MAAM,CAACG,OAAO,CAAE;cACjDf,SAAS,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACF3B,OAAA;cAAO6B,OAAO,EAAC,UAAU;cAACP,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eAEN3B,OAAA,CAACH,IAAI;YAACyC,EAAE,EAAC,kBAAkB;YAAChB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eAEN3B,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,2BAA2B;UAACiB,QAAQ,EAAE3B,SAAU;UAAAW,QAAA,EAC7EX,SAAS,GAAG,eAAe,GAAG;QAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEP3B,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BvB,OAAA;UAAAuB,QAAA,GAAG,yBAAuB,eAAAvB,OAAA,CAACH,IAAI;YAACyC,EAAE,EAAC,SAAS;YAAAf,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvGIF,KAAK;EAAA,QAMQH,WAAW;AAAA;AAAA0C,EAAA,GANxBvC,KAAK;AAyGX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}