{"ast":null,"code":"// // // import React, { useEffect, useState } from 'react';\n// // // import axios from 'axios';\n\n// // // export default function PendingRequests() {\n// // //   const [requests, setRequests] = useState([]);\n\n// // //   useEffect(() => {\n// // //     const token = localStorage.getItem('token');\n// // //     axios.get('http://localhost:5000/api/requests/pending', {\n// // //       headers: { Authorization: `Bearer ${token}` }\n// // //     }).then(res => setRequests(res.data));\n// // //   }, []);\n\n// // //   const handleAction = async (id, status) => {\n// // //     const token = localStorage.getItem('token');\n// // //     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\n// // //       headers: { Authorization: `Bearer ${token}` }\n// // //     });\n// // //     alert(`Request ${status}`);\n// // //     setRequests(requests.filter(r => r.id !== id));\n// // //   };\n\n// // //   return (\n// // //     <div>\n// // //       {requests.map(r => (\n// // //         <div key={r.id}>\n// // //           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\n// // //           <p>Reason: {r.reason}</p>\n// // //           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\n// // //           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\n// // //         </div>\n// // //       ))}\n// // //     </div>\n// // //   );\n// // // }\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n\n// // const PendingRequests = () => {\n// //   const [requests, setRequests] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n\n// //   useEffect(() => {\n// //     async function fetchRequests() {\n// //       try {\n// //         const res = await axios.get('/api/requests/pending');\n// //         setRequests(res.data);\n// //       } catch (err) {\n// //         console.error('Failed to fetch pending requests', err);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     }\n// //     fetchRequests();\n// //   }, []);\n\n// //   if (loading) return <div className=\"container mt-4\">Loading pending requests...</div>;\n\n// //   return (\n// //     <div className=\"container mt-4\">\n// //       <h3>Pending Requests</h3>\n// //       {requests.length === 0 ? (\n// //         <p>No pending requests.</p>\n// //       ) : (\n// //         <table className=\"table table-striped\">\n// //           <thead>\n// //             <tr>\n// //               <th>Request ID</th>\n// //               <th>User</th>\n// //               <th>Software</th>\n// //               <th>Status</th>\n// //               <th>Requested On</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {requests.map(req => (\n// //               <tr key={req.id}>\n// //                 <td>{req.id}</td>\n// //                 <td>{req.userName}</td>\n// //                 <td>{req.softwareName}</td>\n// //                 <td>{req.status}</td>\n// //                 <td>{new Date(req.createdAt).toLocaleDateString()}</td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default PendingRequests;\n// import React, { useEffect, useState } from 'react';\n\n// const PendingRequests = () => {\n//   const [requests, setRequests] = useState([]);\n\n//   useEffect(() => {\n//     // TODO: Fetch pending requests from backend API\n//     // Simulate with dummy data\n//     setRequests([\n//       { id: 1, softwareName: 'Accounting App', requestedBy: 'user1', status: 'Pending' },\n//       { id: 2, softwareName: 'Inventory System', requestedBy: 'user2', status: 'Pending' },\n//     ]);\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Pending Requests</h2>\n//       {requests.length === 0 ? (\n//         <p>No pending requests found.</p>\n//       ) : (\n//         <table className=\"table table-bordered w-75\">\n//           <thead>\n//             <tr>\n//               <th>Request ID</th>\n//               <th>Software Name</th>\n//               <th>Requested By</th>\n//               <th>Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {requests.map(req => (\n//               <tr key={req.id}>\n//                 <td>{req.id}</td>\n//                 <td>{req.softwareName}</td>\n//                 <td>{req.requestedBy}</td>\n//                 <td>{req.status}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PendingRequests;","map":{"version":3,"names":[],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/PendingRequests.js"],"sourcesContent":["// // // import React, { useEffect, useState } from 'react';\r\n// // // import axios from 'axios';\r\n\r\n// // // export default function PendingRequests() {\r\n// // //   const [requests, setRequests] = useState([]);\r\n\r\n// // //   useEffect(() => {\r\n// // //     const token = localStorage.getItem('token');\r\n// // //     axios.get('http://localhost:5000/api/requests/pending', {\r\n// // //       headers: { Authorization: `Bearer ${token}` }\r\n// // //     }).then(res => setRequests(res.data));\r\n// // //   }, []);\r\n\r\n// // //   const handleAction = async (id, status) => {\r\n// // //     const token = localStorage.getItem('token');\r\n// // //     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\r\n// // //       headers: { Authorization: `Bearer ${token}` }\r\n// // //     });\r\n// // //     alert(`Request ${status}`);\r\n// // //     setRequests(requests.filter(r => r.id !== id));\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div>\r\n// // //       {requests.map(r => (\r\n// // //         <div key={r.id}>\r\n// // //           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\r\n// // //           <p>Reason: {r.reason}</p>\r\n// // //           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\r\n// // //           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\r\n// // //         </div>\r\n// // //       ))}\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // const PendingRequests = () => {\r\n// //   const [requests, setRequests] = useState([]);\r\n// //   const [loading, setLoading] = useState(true);\r\n\r\n// //   useEffect(() => {\r\n// //     async function fetchRequests() {\r\n// //       try {\r\n// //         const res = await axios.get('/api/requests/pending');\r\n// //         setRequests(res.data);\r\n// //       } catch (err) {\r\n// //         console.error('Failed to fetch pending requests', err);\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     }\r\n// //     fetchRequests();\r\n// //   }, []);\r\n\r\n// //   if (loading) return <div className=\"container mt-4\">Loading pending requests...</div>;\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-4\">\r\n// //       <h3>Pending Requests</h3>\r\n// //       {requests.length === 0 ? (\r\n// //         <p>No pending requests.</p>\r\n// //       ) : (\r\n// //         <table className=\"table table-striped\">\r\n// //           <thead>\r\n// //             <tr>\r\n// //               <th>Request ID</th>\r\n// //               <th>User</th>\r\n// //               <th>Software</th>\r\n// //               <th>Status</th>\r\n// //               <th>Requested On</th>\r\n// //             </tr>\r\n// //           </thead>\r\n// //           <tbody>\r\n// //             {requests.map(req => (\r\n// //               <tr key={req.id}>\r\n// //                 <td>{req.id}</td>\r\n// //                 <td>{req.userName}</td>\r\n// //                 <td>{req.softwareName}</td>\r\n// //                 <td>{req.status}</td>\r\n// //                 <td>{new Date(req.createdAt).toLocaleDateString()}</td>\r\n// //               </tr>\r\n// //             ))}\r\n// //           </tbody>\r\n// //         </table>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default PendingRequests;\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const PendingRequests = () => {\r\n//   const [requests, setRequests] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // TODO: Fetch pending requests from backend API\r\n//     // Simulate with dummy data\r\n//     setRequests([\r\n//       { id: 1, softwareName: 'Accounting App', requestedBy: 'user1', status: 'Pending' },\r\n//       { id: 2, softwareName: 'Inventory System', requestedBy: 'user2', status: 'Pending' },\r\n//     ]);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Pending Requests</h2>\r\n//       {requests.length === 0 ? (\r\n//         <p>No pending requests found.</p>\r\n//       ) : (\r\n//         <table className=\"table table-bordered w-75\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Request ID</th>\r\n//               <th>Software Name</th>\r\n//               <th>Requested By</th>\r\n//               <th>Status</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {requests.map(req => (\r\n//               <tr key={req.id}>\r\n//                 <td>{req.id}</td>\r\n//                 <td>{req.softwareName}</td>\r\n//                 <td>{req.requestedBy}</td>\r\n//                 <td>{req.status}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PendingRequests;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}