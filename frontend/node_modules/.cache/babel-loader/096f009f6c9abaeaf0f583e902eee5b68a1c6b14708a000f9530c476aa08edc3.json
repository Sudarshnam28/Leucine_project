{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\PendingRequests.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n\n// // export default function PendingRequests() {\n// //   const [requests, setRequests] = useState([]);\n\n// //   useEffect(() => {\n// //     const token = localStorage.getItem('token');\n// //     axios.get('http://localhost:5000/api/requests/pending', {\n// //       headers: { Authorization: `Bearer ${token}` }\n// //     }).then(res => setRequests(res.data));\n// //   }, []);\n\n// //   const handleAction = async (id, status) => {\n// //     const token = localStorage.getItem('token');\n// //     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\n// //       headers: { Authorization: `Bearer ${token}` }\n// //     });\n// //     alert(`Request ${status}`);\n// //     setRequests(requests.filter(r => r.id !== id));\n// //   };\n\n// //   return (\n// //     <div>\n// //       {requests.map(r => (\n// //         <div key={r.id}>\n// //           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\n// //           <p>Reason: {r.reason}</p>\n// //           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\n// //           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const PendingRequests = () => {\n//   const [requests, setRequests] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     async function fetchRequests() {\n//       try {\n//         const res = await axios.get('/api/requests/pending');\n//         setRequests(res.data);\n//       } catch (err) {\n//         console.error('Failed to fetch pending requests', err);\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//     fetchRequests();\n//   }, []);\n\n//   if (loading) return <div className=\"container mt-4\">Loading pending requests...</div>;\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h3>Pending Requests</h3>\n//       {requests.length === 0 ? (\n//         <p>No pending requests.</p>\n//       ) : (\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th>Request ID</th>\n//               <th>User</th>\n//               <th>Software</th>\n//               <th>Status</th>\n//               <th>Requested On</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {requests.map(req => (\n//               <tr key={req.id}>\n//                 <td>{req.id}</td>\n//                 <td>{req.userName}</td>\n//                 <td>{req.softwareName}</td>\n//                 <td>{req.status}</td>\n//                 <td>{new Date(req.createdAt).toLocaleDateString()}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PendingRequests;\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PendingRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  useEffect(() => {\n    // TODO: Fetch pending requests from backend API\n    // Simulate with dummy data\n    setRequests([{\n      id: 1,\n      softwareName: 'Accounting App',\n      requestedBy: 'user1',\n      status: 'Pending'\n    }, {\n      id: 2,\n      softwareName: 'Inventory System',\n      requestedBy: 'user2',\n      status: 'Pending'\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending requests found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered w-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Request ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Software Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Requested By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: requests.map(req => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: req.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: req.softwareName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: req.requestedBy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: req.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, req.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(PendingRequests, \"MIcAFnHRaJFubpcUtYXSDqOxSqY=\");\n_c = PendingRequests;\nexport default PendingRequests;\nvar _c;\n$RefreshReg$(_c, \"PendingRequests\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PendingRequests","_s","requests","setRequests","id","softwareName","requestedBy","status","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","req","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/PendingRequests.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // export default function PendingRequests() {\r\n// //   const [requests, setRequests] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem('token');\r\n// //     axios.get('http://localhost:5000/api/requests/pending', {\r\n// //       headers: { Authorization: `Bearer ${token}` }\r\n// //     }).then(res => setRequests(res.data));\r\n// //   }, []);\r\n\r\n// //   const handleAction = async (id, status) => {\r\n// //     const token = localStorage.getItem('token');\r\n// //     await axios.patch(`http://localhost:5000/api/requests/${id}`, { status }, {\r\n// //       headers: { Authorization: `Bearer ${token}` }\r\n// //     });\r\n// //     alert(`Request ${status}`);\r\n// //     setRequests(requests.filter(r => r.id !== id));\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       {requests.map(r => (\r\n// //         <div key={r.id}>\r\n// //           <p>{r.user.username} requested {r.accessType} for {r.software.name}</p>\r\n// //           <p>Reason: {r.reason}</p>\r\n// //           <button onClick={() => handleAction(r.id, 'Approved')}>Approve</button>\r\n// //           <button onClick={() => handleAction(r.id, 'Rejected')}>Reject</button>\r\n// //         </div>\r\n// //       ))}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const PendingRequests = () => {\r\n//   const [requests, setRequests] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchRequests() {\r\n//       try {\r\n//         const res = await axios.get('/api/requests/pending');\r\n//         setRequests(res.data);\r\n//       } catch (err) {\r\n//         console.error('Failed to fetch pending requests', err);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     }\r\n//     fetchRequests();\r\n//   }, []);\r\n\r\n//   if (loading) return <div className=\"container mt-4\">Loading pending requests...</div>;\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h3>Pending Requests</h3>\r\n//       {requests.length === 0 ? (\r\n//         <p>No pending requests.</p>\r\n//       ) : (\r\n//         <table className=\"table table-striped\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Request ID</th>\r\n//               <th>User</th>\r\n//               <th>Software</th>\r\n//               <th>Status</th>\r\n//               <th>Requested On</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {requests.map(req => (\r\n//               <tr key={req.id}>\r\n//                 <td>{req.id}</td>\r\n//                 <td>{req.userName}</td>\r\n//                 <td>{req.softwareName}</td>\r\n//                 <td>{req.status}</td>\r\n//                 <td>{new Date(req.createdAt).toLocaleDateString()}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PendingRequests;\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst PendingRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch pending requests from backend API\r\n    // Simulate with dummy data\r\n    setRequests([\r\n      { id: 1, softwareName: 'Accounting App', requestedBy: 'user1', status: 'Pending' },\r\n      { id: 2, softwareName: 'Inventory System', requestedBy: 'user2', status: 'Pending' },\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Pending Requests</h2>\r\n      {requests.length === 0 ? (\r\n        <p>No pending requests found.</p>\r\n      ) : (\r\n        <table className=\"table table-bordered w-75\">\r\n          <thead>\r\n            <tr>\r\n              <th>Request ID</th>\r\n              <th>Software Name</th>\r\n              <th>Requested By</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {requests.map(req => (\r\n              <tr key={req.id}>\r\n                <td>{req.id}</td>\r\n                <td>{req.softwareName}</td>\r\n                <td>{req.requestedBy}</td>\r\n                <td>{req.status}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}