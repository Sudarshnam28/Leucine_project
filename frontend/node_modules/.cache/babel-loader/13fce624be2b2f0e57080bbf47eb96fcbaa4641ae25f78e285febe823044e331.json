{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\CreateSoftware.js\",\n  _s = $RefreshSig$();\n// // // import React, { useState } from 'react';\n// // // import axios from 'axios';\n\n// // // export default function CreateSoftware() {\n// // //   const [form, setForm] = useState({ name: '', description: '', accessLevels: '' });\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const token = localStorage.getItem('token');\n// // //     await axios.post('http://localhost:5000/api/software', {\n// // //       ...form,\n// // //       accessLevels: form.accessLevels.split(',')\n// // //     }, {\n// // //       headers: { Authorization: `Bearer ${token}` }\n// // //     });\n// // //     alert('Software created!');\n// // //   };\n\n// // //   return (\n// // //     <form onSubmit={handleSubmit}>\n// // //       <input placeholder=\"Name\" onChange={e => setForm({ ...form, name: e.target.value })} />\n// // //       <textarea placeholder=\"Description\" onChange={e => setForm({ ...form, description: e.target.value })} />\n// // //       <input placeholder=\"Access Levels (comma separated)\" onChange={e => setForm({ ...form, accessLevels: e.target.value })} />\n// // //       <button type=\"submit\">Create</button>\n// // //     </form>\n// // //   );\n// // // }\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n\n// // const CreateSoftware = () => {\n// //   const [formData, setFormData] = useState({\n// //     name: '',\n// //     description: '',\n// //     version: '',\n// //     licenseKey: '',\n// //   });\n\n// //   const [message, setMessage] = useState('');\n\n// //   const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n// //   const handleSubmit = async e => {\n// //     e.preventDefault();\n// //     try {\n// //       // Replace with your backend API endpoint\n// //       const res = await axios.post('/api/software/create', formData);\n// //       setMessage('Software created successfully!');\n// //       setFormData({ name: '', description: '', version: '', licenseKey: '' });\n// //     } catch (err) {\n// //       setMessage('Error creating software.');\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\n// //       <h3>Create Software</h3>\n// //       {message && <div className=\"alert alert-info\">{message}</div>}\n// //       <form onSubmit={handleSubmit}>\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"name\" className=\"form-label\">\n// //             Software Name\n// //           </label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             id=\"name\"\n// //             name=\"name\"\n// //             value={formData.name}\n// //             onChange={handleChange}\n// //             required\n// //             placeholder=\"Enter software name\"\n// //           />\n// //         </div>\n\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"description\" className=\"form-label\">\n// //             Description\n// //           </label>\n// //           <textarea\n// //             className=\"form-control\"\n// //             id=\"description\"\n// //             name=\"description\"\n// //             rows=\"3\"\n// //             value={formData.description}\n// //             onChange={handleChange}\n// //             placeholder=\"Enter description\"\n// //             required\n// //           />\n// //         </div>\n\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"version\" className=\"form-label\">\n// //             Version\n// //           </label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             id=\"version\"\n// //             name=\"version\"\n// //             value={formData.version}\n// //             onChange={handleChange}\n// //             required\n// //             placeholder=\"e.g., 1.0.0\"\n// //           />\n// //         </div>\n\n// //         <div className=\"mb-3\">\n// //           <label htmlFor=\"licenseKey\" className=\"form-label\">\n// //             License Key\n// //           </label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             id=\"licenseKey\"\n// //             name=\"licenseKey\"\n// //             value={formData.licenseKey}\n// //             onChange={handleChange}\n// //             placeholder=\"Optional\"\n// //           />\n// //         </div>\n\n// //         <button type=\"submit\" className=\"btn btn-success\">\n// //           Create\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default CreateSoftware;\n// import React, { useState } from 'react';\n\n// const CreateSoftware = () => {\n//   const [softwareName, setSoftwareName] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     // TODO: Connect with backend API to save software data\n//     setMessage(`Software \"${softwareName}\" created successfully!`);\n//     setSoftwareName('');\n//     setDescription('');\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Software</h2>\n//       <form onSubmit={handleSubmit} className=\"w-50\">\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"softwareName\" className=\"form-label\">\n//             Software Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"softwareName\"\n//             className=\"form-control\"\n//             value={softwareName}\n//             onChange={e => setSoftwareName(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"description\" className=\"form-label\">\n//             Description\n//           </label>\n//           <textarea\n//             id=\"description\"\n//             className=\"form-control\"\n//             rows=\"3\"\n//             value={description}\n//             onChange={e => setDescription(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           Create\n//         </button>\n//       </form>\n\n//       {message && <div className=\"alert alert-success mt-3\">{message}</div>}\n//     </div>\n//   );\n// };\n\n// export default CreateSoftware;\n\nimport React, { useState } from 'react';\nimport './CreateSoftware.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSoftware = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    version: '',\n    licenseKey: '',\n    accessLevels: ['Read', 'Write', 'Admin']\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCheckboxChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    setFormData(prev => {\n      if (checked) {\n        return {\n          ...prev,\n          accessLevels: [...prev.accessLevels, value]\n        };\n      } else {\n        return {\n          ...prev,\n          accessLevels: prev.accessLevels.filter(level => level !== value)\n        };\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      setMessage('Software created successfully!');\n      setFormData({\n        name: '',\n        description: '',\n        version: '',\n        licenseKey: '',\n        accessLevels: ['Read', 'Write', 'Admin']\n      });\n    } catch (err) {\n      setMessage('Error creating software. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-software-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create New Software\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add a new software to the system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${message.includes('success') ? 'alert-success' : 'alert-danger'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Software Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            className: \"form-control\",\n            value: formData.name,\n            onChange: handleChange,\n            placeholder: \"Enter software name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            className: \"form-control\",\n            rows: \"4\",\n            value: formData.description,\n            onChange: handleChange,\n            placeholder: \"Enter software description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"version\",\n            className: \"form-label\",\n            children: \"Version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"version\",\n            name: \"version\",\n            className: \"form-control\",\n            value: formData.version,\n            onChange: handleChange,\n            placeholder: \"e.g., 1.0.0\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"licenseKey\",\n            className: \"form-label\",\n            children: \"License Key (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"licenseKey\",\n            name: \"licenseKey\",\n            className: \"form-control\",\n            value: formData.licenseKey,\n            onChange: handleChange,\n            placeholder: \"Enter license key if applicable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Access Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"access-levels\",\n            children: ['Read', 'Write', 'Admin'].map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `access-${level}`,\n                value: level,\n                checked: formData.accessLevels.includes(level),\n                onChange: handleCheckboxChange,\n                className: \"form-check-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `access-${level}`,\n                className: \"form-check-label\",\n                children: level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, level, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Creating...' : 'Create Software'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSoftware, \"d3PtDIyl9EAmW2MRsefLIcECMMg=\");\n_c = CreateSoftware;\nexport default CreateSoftware;\nvar _c;\n$RefreshReg$(_c, \"CreateSoftware\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateSoftware","_s","formData","setFormData","name","description","version","licenseKey","accessLevels","message","setMessage","isSubmitting","setIsSubmitting","handleChange","e","value","target","prev","handleCheckboxChange","checked","filter","level","handleSubmit","preventDefault","Promise","resolve","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","htmlFor","type","id","onChange","placeholder","required","rows","map","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/CreateSoftware.js"],"sourcesContent":["// // // import React, { useState } from 'react';\r\n// // // import axios from 'axios';\r\n\r\n// // // export default function CreateSoftware() {\r\n// // //   const [form, setForm] = useState({ name: '', description: '', accessLevels: '' });\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const token = localStorage.getItem('token');\r\n// // //     await axios.post('http://localhost:5000/api/software', {\r\n// // //       ...form,\r\n// // //       accessLevels: form.accessLevels.split(',')\r\n// // //     }, {\r\n// // //       headers: { Authorization: `Bearer ${token}` }\r\n// // //     });\r\n// // //     alert('Software created!');\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <form onSubmit={handleSubmit}>\r\n// // //       <input placeholder=\"Name\" onChange={e => setForm({ ...form, name: e.target.value })} />\r\n// // //       <textarea placeholder=\"Description\" onChange={e => setForm({ ...form, description: e.target.value })} />\r\n// // //       <input placeholder=\"Access Levels (comma separated)\" onChange={e => setForm({ ...form, accessLevels: e.target.value })} />\r\n// // //       <button type=\"submit\">Create</button>\r\n// // //     </form>\r\n// // //   );\r\n// // // }\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // const CreateSoftware = () => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: '',\r\n// //     description: '',\r\n// //     version: '',\r\n// //     licenseKey: '',\r\n// //   });\r\n\r\n// //   const [message, setMessage] = useState('');\r\n\r\n// //   const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n// //   const handleSubmit = async e => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       // Replace with your backend API endpoint\r\n// //       const res = await axios.post('/api/software/create', formData);\r\n// //       setMessage('Software created successfully!');\r\n// //       setFormData({ name: '', description: '', version: '', licenseKey: '' });\r\n// //     } catch (err) {\r\n// //       setMessage('Error creating software.');\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\r\n// //       <h3>Create Software</h3>\r\n// //       {message && <div className=\"alert alert-info\">{message}</div>}\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"name\" className=\"form-label\">\r\n// //             Software Name\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             className=\"form-control\"\r\n// //             id=\"name\"\r\n// //             name=\"name\"\r\n// //             value={formData.name}\r\n// //             onChange={handleChange}\r\n// //             required\r\n// //             placeholder=\"Enter software name\"\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"description\" className=\"form-label\">\r\n// //             Description\r\n// //           </label>\r\n// //           <textarea\r\n// //             className=\"form-control\"\r\n// //             id=\"description\"\r\n// //             name=\"description\"\r\n// //             rows=\"3\"\r\n// //             value={formData.description}\r\n// //             onChange={handleChange}\r\n// //             placeholder=\"Enter description\"\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"version\" className=\"form-label\">\r\n// //             Version\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             className=\"form-control\"\r\n// //             id=\"version\"\r\n// //             name=\"version\"\r\n// //             value={formData.version}\r\n// //             onChange={handleChange}\r\n// //             required\r\n// //             placeholder=\"e.g., 1.0.0\"\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div className=\"mb-3\">\r\n// //           <label htmlFor=\"licenseKey\" className=\"form-label\">\r\n// //             License Key\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             className=\"form-control\"\r\n// //             id=\"licenseKey\"\r\n// //             name=\"licenseKey\"\r\n// //             value={formData.licenseKey}\r\n// //             onChange={handleChange}\r\n// //             placeholder=\"Optional\"\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <button type=\"submit\" className=\"btn btn-success\">\r\n// //           Create\r\n// //         </button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default CreateSoftware;\r\n// import React, { useState } from 'react';\r\n\r\n// const CreateSoftware = () => {\r\n//   const [softwareName, setSoftwareName] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     // TODO: Connect with backend API to save software data\r\n//     setMessage(`Software \"${softwareName}\" created successfully!`);\r\n//     setSoftwareName('');\r\n//     setDescription('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Create Software</h2>\r\n//       <form onSubmit={handleSubmit} className=\"w-50\">\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"softwareName\" className=\"form-label\">\r\n//             Software Name\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"softwareName\"\r\n//             className=\"form-control\"\r\n//             value={softwareName}\r\n//             onChange={e => setSoftwareName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"description\" className=\"form-label\">\r\n//             Description\r\n//           </label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             className=\"form-control\"\r\n//             rows=\"3\"\r\n//             value={description}\r\n//             onChange={e => setDescription(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"btn btn-primary\">\r\n//           Create\r\n//         </button>\r\n//       </form>\r\n\r\n//       {message && <div className=\"alert alert-success mt-3\">{message}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateSoftware;\r\n\r\nimport React, { useState } from 'react';\r\nimport './CreateSoftware.css';\r\n\r\nconst CreateSoftware = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    version: '',\r\n    licenseKey: '',\r\n    accessLevels: ['Read', 'Write', 'Admin']\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData(prev => {\r\n      if (checked) {\r\n        return {\r\n          ...prev,\r\n          accessLevels: [...prev.accessLevels, value]\r\n        };\r\n      } else {\r\n        return {\r\n          ...prev,\r\n          accessLevels: prev.accessLevels.filter(level => level !== value)\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      setMessage('Software created successfully!');\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        version: '',\r\n        licenseKey: '',\r\n        accessLevels: ['Read', 'Write', 'Admin']\r\n      });\r\n    } catch (err) {\r\n      setMessage('Error creating software. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-software-container\">\r\n      <div className=\"page-header\">\r\n        <h1>Create New Software</h1>\r\n        <p>Add a new software to the system</p>\r\n      </div>\r\n      \r\n      <div className=\"form-container\">\r\n        {message && (\r\n          <div className={`alert ${message.includes('success') ? 'alert-success' : 'alert-danger'}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\" className=\"form-label\">Software Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter software name\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              rows=\"4\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter software description\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"version\" className=\"form-label\">Version</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"version\"\r\n              name=\"version\"\r\n              className=\"form-control\"\r\n              value={formData.version}\r\n              onChange={handleChange}\r\n              placeholder=\"e.g., 1.0.0\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"licenseKey\" className=\"form-label\">License Key (Optional)</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"licenseKey\"\r\n              name=\"licenseKey\"\r\n              className=\"form-control\"\r\n              value={formData.licenseKey}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter license key if applicable\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">Access Levels</label>\r\n            <div className=\"access-levels\">\r\n              {['Read', 'Write', 'Admin'].map(level => (\r\n                <div key={level} className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`access-${level}`}\r\n                    value={level}\r\n                    checked={formData.accessLevels.includes(level)}\r\n                    onChange={handleCheckboxChange}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label htmlFor={`access-${level}`} className=\"form-check-label\">\r\n                    {level}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? 'Creating...' : 'Create Software'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSoftware;"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO;EACzC,CAAC,CAAC;EACF,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}