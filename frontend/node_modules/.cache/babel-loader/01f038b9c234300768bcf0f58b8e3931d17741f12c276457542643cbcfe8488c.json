{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\OneDrive\\\\Desktop\\\\Leucine\\\\frontend\\\\src\\\\pages\\\\RequestAccess.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// export default function RequestAccess() {\n//   const [softwares, setSoftwares] = useState([]);\n//   const [form, setForm] = useState({ softwareId: '', accessType: '', reason: '' });\n\n//   useEffect(() => {\n//     axios.get('http://localhost:5000/api/software').then(res => setSoftwares(res.data));\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n//     await axios.post('http://localhost:5000/api/requests', form, {\n//       headers: { Authorization: `Bearer ${token}` }\n//     });\n//     alert('Request submitted!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <select onChange={e => setForm({ ...form, softwareId: e.target.value })}>\n//         <option>Select software</option>\n//         {softwares.map(soft => <option key={soft.id} value={soft.id}>{soft.name}</option>)}\n//       </select>\n//       <input placeholder=\"Access Type (Read/Write/Admin)\" onChange={e => setForm({ ...form, accessType: e.target.value })} />\n//       <textarea placeholder=\"Reason\" onChange={e => setForm({ ...form, reason: e.target.value })} />\n//       <button type=\"submit\">Request Access</button>\n//     </form>\n//   );\n// }\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestAccess = () => {\n  _s();\n  const [softwareId, setSoftwareId] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/requests/create', {\n        softwareId\n      });\n      setMessage('Access request sent successfully.');\n      setSoftwareId('');\n    } catch (err) {\n      setMessage('Failed to send access request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    style: {\n      maxWidth: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Request Access to Software\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"softwareId\",\n          className: \"form-label\",\n          children: \"Software ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"softwareId\",\n          name: \"softwareId\",\n          value: softwareId,\n          onChange: e => setSoftwareId(e.target.value),\n          placeholder: \"Enter software ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Request Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestAccess, \"GvTZ3avLtVHxPRi2AmTuE7O9LwI=\");\n_c = RequestAccess;\nexport default RequestAccess;\nvar _c;\n$RefreshReg$(_c, \"RequestAccess\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RequestAccess","_s","softwareId","setSoftwareId","message","setMessage","handleSubmit","e","preventDefault","post","err","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/vaish/OneDrive/Desktop/Leucine/frontend/src/pages/RequestAccess.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// export default function RequestAccess() {\r\n//   const [softwares, setSoftwares] = useState([]);\r\n//   const [form, setForm] = useState({ softwareId: '', accessType: '', reason: '' });\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:5000/api/software').then(res => setSoftwares(res.data));\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n//     await axios.post('http://localhost:5000/api/requests', form, {\r\n//       headers: { Authorization: `Bearer ${token}` }\r\n//     });\r\n//     alert('Request submitted!');\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <select onChange={e => setForm({ ...form, softwareId: e.target.value })}>\r\n//         <option>Select software</option>\r\n//         {softwares.map(soft => <option key={soft.id} value={soft.id}>{soft.name}</option>)}\r\n//       </select>\r\n//       <input placeholder=\"Access Type (Read/Write/Admin)\" onChange={e => setForm({ ...form, accessType: e.target.value })} />\r\n//       <textarea placeholder=\"Reason\" onChange={e => setForm({ ...form, reason: e.target.value })} />\r\n//       <button type=\"submit\">Request Access</button>\r\n//     </form>\r\n//   );\r\n// }\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RequestAccess = () => {\r\n  const [softwareId, setSoftwareId] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/requests/create', { softwareId });\r\n      setMessage('Access request sent successfully.');\r\n      setSoftwareId('');\r\n    } catch (err) {\r\n      setMessage('Failed to send access request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\" style={{ maxWidth: '600px' }}>\r\n      <h3>Request Access to Software</h3>\r\n      {message && <div className=\"alert alert-info\">{message}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"softwareId\" className=\"form-label\">\r\n            Software ID\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"softwareId\"\r\n            name=\"softwareId\"\r\n            value={softwareId}\r\n            onChange={e => setSoftwareId(e.target.value)}\r\n            placeholder=\"Enter software ID\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Request Access\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestAccess;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMX,KAAK,CAACY,IAAI,CAAC,sBAAsB,EAAE;QAAEP;MAAW,CAAC,CAAC;MACxDG,UAAU,CAAC,mCAAmC,CAAC;MAC/CF,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZL,UAAU,CAAC,gCAAgC,CAAC;IAC9C;EACF,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC3Df,OAAA;MAAAe,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClCd,OAAO,iBAAIL,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAG,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7DnB,OAAA;MAAMoB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3Bf,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAG,QAAA,gBACnBf,OAAA;UAAOqB,OAAO,EAAC,YAAY;UAACT,SAAS,EAAC,YAAY;UAAAG,QAAA,EAAC;QAEnD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRnB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXV,SAAS,EAAC,cAAc;UACxBW,EAAE,EAAC,YAAY;UACfC,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEtB,UAAW;UAClBuB,QAAQ,EAAElB,CAAC,IAAIJ,aAAa,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC,mBAAmB;UAC/BC,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,iBAAiB;QAAAG,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}